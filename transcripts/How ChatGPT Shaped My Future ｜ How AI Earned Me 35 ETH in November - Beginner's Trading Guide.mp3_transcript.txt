Speaker A: Hey everyone. Today I've got an exciting video for you. I'm going to show you how to create and run an Ethereum sniping bot using AI powered ChatGPT. And guess what? It's already earning me daily passive income consistently. Here's the magic. The sniping bot monitors the blockchain for new tokens and significant price changes. When it detects an opportunity, it acts swiftly, buying or selling tokens before most traders even notice. This gives us a significant advantage to profit from these price differences. The bot's secret is its ability to identify tokens as they're listed or during sudden price movements, using smart algorithms to make trades for you so you can sit back and watch the profits roll in. If you're thinking, man, that sounds too complicated, don't worry, it's actually pretty easy and you don't need to know any coding. Just stick around and we'll get started. Alright, let's dive in. First, ask ChatGPT to write the code for a smart contract on Ethereum to automatically hunt for sniping opportunities to earn Ethereum. There you go. ChatGPT is writing the code and I bet it's better than any human could come up with. Next, head over to Remix, a Web3 application that allows us to develop, compile, deploy and launch smart contracts written in Solidity. I'll put a link to Remix in the description below. Ensure you have the Metamask browser extension installed and are connected to the Ethereum mainnet. If it's your first time on Remix, you might need to agree to their terms. I've already done that. Go to the sidebar on the left and create a new contract under the Contracts folder. We'll name it Bot Sold. Copy the code from ChatGPT and paste it into the Bot Sol file. This is our Sniping trading bot. I'll also place this code in the description so you can copy it. Check lines 50 and 51. After pasting the code, you can follow these addresses using Etherscan. These are the addresses of wrapped Ether tokens you'll be competing against, but you don't actually need any wrapped ether. Perfect. It's the official wrapped Ether address. It's always good to check back to Remix. Now that our bot file is ready, let's compile it. Click here. As you can see, it's built with a 0.6.6 version of Solidity. Under compiler. Select the 0.6.6 version to match our contract. Make sure the language is set to Solidity and the EVM version to default. Now click on the Compile Bot Sol button and wait for the bot to compile. Next we will deploy this to our wallet. Go to the Deploy and Run Transactions tab in Remix, select the injected web3 environment. We need to confirm the contract on the blockchain by paying gas fees. Gas fees are the commission on the Ethereum network for smart contract deployment. Now the deployment is ready to go. Click deploy. I always set the gas fee to high. It usually doesn't make much difference and processes the transaction faster. Now we wait for the transaction to confirm. Great. It's confirmed. Our smart contract is deployed. Now you can see the various functions of our smart contract. Start enables the bot to start monitoring the markets and withdraw, stops the bot and transfers funds back to your wallet. The rest of the functions are not quite relevant for now. With the smart contract deployed, fund it with some Ethereum for trading. Make sure you have the correct address. You can fund the contract with any amount of Ethereum. But remember, the more you invest, the larger the trades and potential profits. Excellent. The transaction confirms that the funds were sent to the contract. You can verify by checking your contract address on Etherscan, ensuring our Ethereum is in the contract. Nice. It shows one Ethereum the amount we funded the contract with. The last step is to click Start which will enable the bot to start scanning the mempool for different liquidity pairs to sandwich transactions. Set the gas speed to high, save and click Confirm. Alright, it's been a little bit over 12 hours. Let's check the bot's profits. I have about 1.31 Ethereum, a 31% profit already. I'll let the bot run for another 12 hours and then withdraw the profits. Nice. That's a little over 1.6 Ethereum. So it took me a day to gain over half of my deposit back. That's pretty impressive. The bot will keep running until you click the withdraw button. When you click Withdraw, the bot will stop trading and return the initial Ethereum plus profit to your wallet. So let's click it. This will charge a small gas fee. I'll set it to high again and click Confirm. Done. The transaction is confirmed. Let's check Metamask. The balance from the bot is already in my wallet. And this is after running the bot for just over a day. Unreal. I've even had weeks where I've made three to six Ethereum, sometimes more. The profits will vary week to week. Share your profits in the comments below. Drop a like and don't forget to subscribe for more ways to make passive income using Web3 tools.
